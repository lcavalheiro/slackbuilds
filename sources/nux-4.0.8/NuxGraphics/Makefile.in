# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@USE_X11_TRUE@am__append_1 = \
@USE_X11_TRUE@  GraphicsDisplayX11.h \
@USE_X11_TRUE@  VirtualKeyCodesX11.h \
@USE_X11_TRUE@  XInputWindow.h

@NUX_OPENGLES_20_FALSE@am__append_2 = \
@NUX_OPENGLES_20_FALSE@  IOpenGLAsmShader.h \
@NUX_OPENGLES_20_FALSE@  RenderingPipeAsm.h

@HAVE_GEIS_TRUE@am__append_3 = \
@HAVE_GEIS_TRUE@  GestureEvent.h

@USE_X11_TRUE@am__append_4 = \
@USE_X11_TRUE@  GraphicsDisplayX11.cpp \
@USE_X11_TRUE@  XInputWindow.cpp

@NUX_OPENGLES_20_FALSE@am__append_5 = \
@NUX_OPENGLES_20_FALSE@  IOpenGLAsmShader.cpp \
@NUX_OPENGLES_20_FALSE@  RenderingPipeAsm.cpp

@HAVE_GEIS_TRUE@am__append_6 = \
@HAVE_GEIS_TRUE@  GestureEvent.cpp

subdir = NuxGraphics
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gtest.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/gcov.m4 \
	$(top_srcdir)/m4/ac_doxygen.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__nux_graphics_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = nux-graphics.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(nux_graphicsdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libnux_graphics_@NUX_API_VERSION@_la_DEPENDENCIES =  \
	$(top_builddir)/NuxCore/libnux-core-@NUX_API_VERSION@.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libnux_graphics_@NUX_API_VERSION@_la_SOURCES_DIST =  \
	BitmapFormats.cpp CairoGraphics.cpp Events.cpp \
	FontRenderer.cpp FontTexture.cpp GdkGraphics.cpp \
	GLDeviceFrameBufferObject.cpp GLDeviceObjects.cpp GLError.cpp \
	GlobalGraphicsInitializer.cpp GLPBuffer.cpp GLRenderStates.cpp \
	GLResource.cpp GLResourceManager.cpp GLShader.cpp \
	GLShaderParameter.cpp GLSh_ColorPicker.cpp \
	GLSh_DrawFunction.cpp GLSh_Fill.cpp \
	GLTemplatePrimitiveBuffer.cpp GLTextureResourceManager.cpp \
	GLTextureStates.cpp GLTimer.cpp GLVertexResourceManager.cpp \
	GLWindowManager.cpp GpuDevice.cpp GpuDeviceShader.cpp \
	GpuDeviceTexture.cpp GpuDeviceVertex.cpp GraphicsEngine.cpp \
	MeshData.cpp MeshFileLoader-OBJ.cpp ImageSurface.cpp \
	IOpenGLAnimatedTexture.cpp IOpenGLBaseTexture.cpp \
	IOpenGLCubeTexture.cpp IOpenGLFrameBufferObject.cpp \
	IOpenGLGLSLShader.cpp IOpenGLIndexBuffer.cpp \
	IOpenGLPixelBufferOject.cpp IOpenGLQuery.cpp \
	IOpenGLRectangleTexture.cpp IOpenGLSurface.cpp \
	IOpenGLTexture2D.cpp IOpenGLVertexBuffer.cpp \
	IOpenGLVertexDeclaration.cpp IOpenGLVolume.cpp \
	IOpenGLVolumeTexture.cpp NuxGraphics.cpp NuxGraphicsObject.cpp \
	NuxGraphicsResources.cpp RenderingPipe.cpp \
	RenderingPipeGLSL.cpp RenderingPipeTextureBlend.cpp \
	GLRenderingAPI.cpp RunTimeStats.cpp GraphicsDisplayX11.cpp \
	XInputWindow.cpp IOpenGLAsmShader.cpp RenderingPipeAsm.cpp \
	GestureEvent.cpp BitmapFormats.h CairoGraphics.h Events.h \
	FontTexture.h FontRenderer.h GdkGraphics.h Gfx_Interface.h \
	GLDeviceFrameBufferObject.h GLDeviceObjects.h GLError.h \
	GlobalGraphicsInitializer.h GLPBuffer.h GLRenderStates.h \
	GLResource.h GLResourceManager.h GLShader.h \
	GLShaderParameter.h GLSh_ColorPicker.h GLSh_DrawFunction.h \
	GLSh_Fill.h GLTemplatePrimitiveBuffer.h \
	GLTextureResourceManager.h GLTextureStates.h GLThread.h \
	GLTimer.h GLVertexResourceManager.h GLWindowManager.h \
	GpuDevice.h GraphicsDisplay.h GraphicsEngine.h MeshData.h \
	MeshFileLoader-OBJ.h ImageSurface.h IOpenGLAnimatedTexture.h \
	IOpenGLBaseTexture.h IOpenGLCubeTexture.h \
	IOpenGLFrameBufferObject.h IOpenGLGLSLShader.h \
	IOpenGLIndexBuffer.h IOpenGLPixelBufferOject.h IOpenGLQuery.h \
	IOpenGLRectangleTexture.h IOpenGLResource.h IOpenGLSurface.h \
	IOpenGLTexture2D.h IOpenGLVertexBuffer.h \
	IOpenGLVertexDeclaration.h IOpenGLVolume.h \
	IOpenGLVolumeTexture.h NuxGraphics.h NuxGraphicsObject.h \
	NuxGraphicsResources.h OpenGLDefinitions.h OpenGLMapping.h \
	RenderingPipe.h RenderingPipeGLSL.h \
	RenderingPipeTextureBlendShaderSource.h RunTimeStats.h \
	GraphicsDisplayX11.h VirtualKeyCodesX11.h XInputWindow.h \
	IOpenGLAsmShader.h RenderingPipeAsm.h GestureEvent.h
@USE_X11_TRUE@am__objects_1 = libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.lo \
@USE_X11_TRUE@	libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.lo
@NUX_OPENGLES_20_FALSE@am__objects_2 = libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.lo \
@NUX_OPENGLES_20_FALSE@	libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.lo
@HAVE_GEIS_TRUE@am__objects_3 = libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.lo
am__objects_4 = libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.lo \
	libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.lo \
	libnux_graphics_@NUX_API_VERSION@_la-Events.lo \
	libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.lo \
	libnux_graphics_@NUX_API_VERSION@_la-FontTexture.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLError.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLResource.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLShader.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLTimer.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.lo \
	libnux_graphics_@NUX_API_VERSION@_la-MeshData.lo \
	libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.lo \
	libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.lo \
	libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.lo \
	libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.lo \
	libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.lo \
	libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.lo \
	libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.lo \
	libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.lo \
	libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.lo \
	libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.lo \
	libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3)
am__objects_5 =
am__objects_6 = $(am__objects_5) $(am__objects_5) $(am__objects_5)
am_libnux_graphics_@NUX_API_VERSION@_la_OBJECTS = $(am__objects_4) \
	$(am__objects_6)
libnux_graphics_@NUX_API_VERSION@_la_OBJECTS =  \
	$(am_libnux_graphics_@NUX_API_VERSION@_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libnux_graphics_@NUX_API_VERSION@_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(libnux_graphics_@NUX_API_VERSION@_la_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libnux_graphics_@NUX_API_VERSION@_la_SOURCES)
DIST_SOURCES =  \
	$(am__libnux_graphics_@NUX_API_VERSION@_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
am__nux_graphics_HEADERS_DIST = BitmapFormats.h CairoGraphics.h \
	Events.h FontTexture.h FontRenderer.h GdkGraphics.h \
	Gfx_Interface.h GLDeviceFrameBufferObject.h GLDeviceObjects.h \
	GLError.h GlobalGraphicsInitializer.h GLPBuffer.h \
	GLRenderStates.h GLResource.h GLResourceManager.h GLShader.h \
	GLShaderParameter.h GLSh_ColorPicker.h GLSh_DrawFunction.h \
	GLSh_Fill.h GLTemplatePrimitiveBuffer.h \
	GLTextureResourceManager.h GLTextureStates.h GLThread.h \
	GLTimer.h GLVertexResourceManager.h GLWindowManager.h \
	GpuDevice.h GraphicsDisplay.h GraphicsEngine.h MeshData.h \
	MeshFileLoader-OBJ.h ImageSurface.h IOpenGLAnimatedTexture.h \
	IOpenGLBaseTexture.h IOpenGLCubeTexture.h \
	IOpenGLFrameBufferObject.h IOpenGLGLSLShader.h \
	IOpenGLIndexBuffer.h IOpenGLPixelBufferOject.h IOpenGLQuery.h \
	IOpenGLRectangleTexture.h IOpenGLResource.h IOpenGLSurface.h \
	IOpenGLTexture2D.h IOpenGLVertexBuffer.h \
	IOpenGLVertexDeclaration.h IOpenGLVolume.h \
	IOpenGLVolumeTexture.h NuxGraphics.h NuxGraphicsObject.h \
	NuxGraphicsResources.h OpenGLDefinitions.h OpenGLMapping.h \
	RenderingPipe.h RenderingPipeGLSL.h \
	RenderingPipeTextureBlendShaderSource.h RunTimeStats.h \
	GraphicsDisplayX11.h VirtualKeyCodesX11.h XInputWindow.h \
	IOpenGLAsmShader.h RenderingPipeAsm.h GestureEvent.h
HEADERS = $(nux_graphics_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/nux-graphics.pc.in \
	$(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COVERAGE_CFLAGS = @COVERAGE_CFLAGS@
COVERAGE_LDFLAGS = @COVERAGE_LDFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN_PAPER_SIZE = @DOXYGEN_PAPER_SIZE@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DX_CONFIG = @DX_CONFIG@
DX_DOCDIR = @DX_DOCDIR@
DX_DOT = @DX_DOT@
DX_DOXYGEN = @DX_DOXYGEN@
DX_DVIPS = @DX_DVIPS@
DX_EGREP = @DX_EGREP@
DX_ENV = @DX_ENV@
DX_FLAG_chi = @DX_FLAG_chi@
DX_FLAG_chm = @DX_FLAG_chm@
DX_FLAG_doc = @DX_FLAG_doc@
DX_FLAG_dot = @DX_FLAG_dot@
DX_FLAG_html = @DX_FLAG_html@
DX_FLAG_man = @DX_FLAG_man@
DX_FLAG_pdf = @DX_FLAG_pdf@
DX_FLAG_ps = @DX_FLAG_ps@
DX_FLAG_rtf = @DX_FLAG_rtf@
DX_FLAG_xml = @DX_FLAG_xml@
DX_HHC = @DX_HHC@
DX_LATEX = @DX_LATEX@
DX_MAKEINDEX = @DX_MAKEINDEX@
DX_PDFLATEX = @DX_PDFLATEX@
DX_PERL = @DX_PERL@
DX_PROJECT = @DX_PROJECT@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCC_FLAGS = @GCC_FLAGS@
GCC_TESTS_FLAGS = @GCC_TESTS_FLAGS@
GCOVR = @GCOVR@
GEIS_CFLAGS = @GEIS_CFLAGS@
GEIS_LIBS = @GEIS_LIBS@
GEIS_PKGS = @GEIS_PKGS@
GENHTML = @GENHTML@
GL_PKGS = @GL_PKGS@
GMOCK_CPPFLAGS = @GMOCK_CPPFLAGS@
GMOCK_INCLUDES = @GMOCK_INCLUDES@
GMOCK_PREFIX = @GMOCK_PREFIX@
GREP = @GREP@
GTEST_CPPFLAGS = @GTEST_CPPFLAGS@
GTEST_PREFIX = @GTEST_PREFIX@
IBUS_CFLAGS = @IBUS_CFLAGS@
IBUS_LIBS = @IBUS_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINTAINER_CFLAGS = @MAINTAINER_CFLAGS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
NUX_ABI_VERSION = @NUX_ABI_VERSION@
NUX_API_VERSION = @NUX_API_VERSION@
NUX_CFLAGS = @NUX_CFLAGS@
NUX_CORE_CFLAGS = @NUX_CORE_CFLAGS@
NUX_CORE_LIBS = @NUX_CORE_LIBS@
NUX_EXAMPLES_CFLAGS = @NUX_EXAMPLES_CFLAGS@
NUX_EXAMPLES_LIBS = @NUX_EXAMPLES_LIBS@
NUX_GESTURES_SUPPORT = @NUX_GESTURES_SUPPORT@
NUX_GPUTESTS_CFLAGS = @NUX_GPUTESTS_CFLAGS@
NUX_GPUTESTS_LIBS = @NUX_GPUTESTS_LIBS@
NUX_GRAPHICS_CFLAGS = @NUX_GRAPHICS_CFLAGS@
NUX_GRAPHICS_LIBS = @NUX_GRAPHICS_LIBS@
NUX_LIBS = @NUX_LIBS@
NUX_LT_LDFLAGS = @NUX_LT_LDFLAGS@
NUX_LT_VERSION = @NUX_LT_VERSION@
NUX_MAJOR_VERSION = @NUX_MAJOR_VERSION@
NUX_MICRO_VERSION = @NUX_MICRO_VERSION@
NUX_MINOR_VERSION = @NUX_MINOR_VERSION@
NUX_VERSION = @NUX_VERSION@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHTOOL = @SHTOOL@
STRIP = @STRIP@
UNITY_SUPPORT_TEST_CFLAGS = @UNITY_SUPPORT_TEST_CFLAGS@
UNITY_SUPPORT_TEST_LIBS = @UNITY_SUPPORT_TEST_LIBS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
CLEANFILES = nux-graphics-@NUX_API_VERSION@.pc
DISTCLEANFILES = nux-graphics.pc
EXTRA_DIST = GraphicsDisplayWin.cpp GraphicsDisplayWin.h \
	nux-graphics.pc.in ${unused_src}
lib_LTLIBRARIES = \
  libnux-graphics-@NUX_API_VERSION@.la

libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS = \
  -I$(srcdir) \
  -I$(top_srcdir) \
  -DPREFIX=\""$(prefix)"\" \
  -DLIBDIR=\""$(libdir)"\" \
  -DDATADIR=\""$(datadir)"\" \
  -DPKGDATADIR=\""$(pkgdatadir)/@NUX_API_VERSION@"\" \
  -DG_LOG_DOMAIN=\"NuxGraphics\" \
  $(GCC_FLAGS) \
  $(NUX_GRAPHICS_CFLAGS) \
  $(MAINTAINER_CFLAGS) \
  $(GEIS_CFLAGS) \
  $(COVERAGE_CFLAGS)

libnux_graphics_@NUX_API_VERSION@_la_LIBADD = \
  $(top_builddir)/NuxCore/libnux-core-@NUX_API_VERSION@.la \
  $(NUX_GRAPHICS_LIBS) \
  $(GEIS_LIBS)

libnux_graphics_@NUX_API_VERSION@_la_LDFLAGS = \
  $(NUX_LT_LDFLAGS) \
  $(COVERAGE_LDFLAGS)

source_h = BitmapFormats.h CairoGraphics.h Events.h FontTexture.h \
	FontRenderer.h GdkGraphics.h Gfx_Interface.h \
	GLDeviceFrameBufferObject.h GLDeviceObjects.h GLError.h \
	GlobalGraphicsInitializer.h GLPBuffer.h GLRenderStates.h \
	GLResource.h GLResourceManager.h GLShader.h \
	GLShaderParameter.h GLSh_ColorPicker.h GLSh_DrawFunction.h \
	GLSh_Fill.h GLTemplatePrimitiveBuffer.h \
	GLTextureResourceManager.h GLTextureStates.h GLThread.h \
	GLTimer.h GLVertexResourceManager.h GLWindowManager.h \
	GpuDevice.h GraphicsDisplay.h GraphicsEngine.h MeshData.h \
	MeshFileLoader-OBJ.h ImageSurface.h IOpenGLAnimatedTexture.h \
	IOpenGLBaseTexture.h IOpenGLCubeTexture.h \
	IOpenGLFrameBufferObject.h IOpenGLGLSLShader.h \
	IOpenGLIndexBuffer.h IOpenGLPixelBufferOject.h IOpenGLQuery.h \
	IOpenGLRectangleTexture.h IOpenGLResource.h IOpenGLSurface.h \
	IOpenGLTexture2D.h IOpenGLVertexBuffer.h \
	IOpenGLVertexDeclaration.h IOpenGLVolume.h \
	IOpenGLVolumeTexture.h NuxGraphics.h NuxGraphicsObject.h \
	NuxGraphicsResources.h OpenGLDefinitions.h OpenGLMapping.h \
	RenderingPipe.h RenderingPipeGLSL.h \
	RenderingPipeTextureBlendShaderSource.h RunTimeStats.h \
	$(am__append_1) $(am__append_2) $(am__append_3)
source_cpp = BitmapFormats.cpp CairoGraphics.cpp Events.cpp \
	FontRenderer.cpp FontTexture.cpp GdkGraphics.cpp \
	GLDeviceFrameBufferObject.cpp GLDeviceObjects.cpp GLError.cpp \
	GlobalGraphicsInitializer.cpp GLPBuffer.cpp GLRenderStates.cpp \
	GLResource.cpp GLResourceManager.cpp GLShader.cpp \
	GLShaderParameter.cpp GLSh_ColorPicker.cpp \
	GLSh_DrawFunction.cpp GLSh_Fill.cpp \
	GLTemplatePrimitiveBuffer.cpp GLTextureResourceManager.cpp \
	GLTextureStates.cpp GLTimer.cpp GLVertexResourceManager.cpp \
	GLWindowManager.cpp GpuDevice.cpp GpuDeviceShader.cpp \
	GpuDeviceTexture.cpp GpuDeviceVertex.cpp GraphicsEngine.cpp \
	MeshData.cpp MeshFileLoader-OBJ.cpp ImageSurface.cpp \
	IOpenGLAnimatedTexture.cpp IOpenGLBaseTexture.cpp \
	IOpenGLCubeTexture.cpp IOpenGLFrameBufferObject.cpp \
	IOpenGLGLSLShader.cpp IOpenGLIndexBuffer.cpp \
	IOpenGLPixelBufferOject.cpp IOpenGLQuery.cpp \
	IOpenGLRectangleTexture.cpp IOpenGLSurface.cpp \
	IOpenGLTexture2D.cpp IOpenGLVertexBuffer.cpp \
	IOpenGLVertexDeclaration.cpp IOpenGLVolume.cpp \
	IOpenGLVolumeTexture.cpp NuxGraphics.cpp NuxGraphicsObject.cpp \
	NuxGraphicsResources.cpp RenderingPipe.cpp \
	RenderingPipeGLSL.cpp RenderingPipeTextureBlend.cpp \
	GLRenderingAPI.cpp RunTimeStats.cpp $(am__append_4) \
	$(am__append_5) $(am__append_6)
libnux_graphics_@NUX_API_VERSION@_la_SOURCES = \
  $(source_cpp) \
  $(source_h)

nux_graphicsdir = $(includedir)/Nux-@NUX_API_VERSION@/NuxGraphics
nux_graphics_HEADERS = \
  $(source_h)

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = nux-graphics-@NUX_API_VERSION@.pc
unused_src = \
 FreetypeFont.cpp \
 FreetypeFont.h \
 GdiImageLoader.cpp \
 GdiImageLoader.h \
 GfxEventsX11.h \
 IOpenGLCgShader.cpp \
 IOpenGLCgShader.h \
 Readme.txt \
 VirtualKeyCodes.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu NuxGraphics/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu NuxGraphics/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
nux-graphics.pc: $(top_builddir)/config.status $(srcdir)/nux-graphics.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libnux-graphics-@NUX_API_VERSION@.la: $(libnux_graphics_@NUX_API_VERSION@_la_OBJECTS) $(libnux_graphics_@NUX_API_VERSION@_la_DEPENDENCIES) $(EXTRA_libnux_graphics_@NUX_API_VERSION@_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libnux_graphics_@NUX_API_VERSION@_la_LINK) -rpath $(libdir) $(libnux_graphics_@NUX_API_VERSION@_la_OBJECTS) $(libnux_graphics_@NUX_API_VERSION@_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-Events.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-FontTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLError.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLResource.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLShader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTimer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-MeshData.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.lo: BitmapFormats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.lo `test -f 'BitmapFormats.cpp' || echo '$(srcdir)/'`BitmapFormats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BitmapFormats.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-BitmapFormats.lo `test -f 'BitmapFormats.cpp' || echo '$(srcdir)/'`BitmapFormats.cpp

libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.lo: CairoGraphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.lo `test -f 'CairoGraphics.cpp' || echo '$(srcdir)/'`CairoGraphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CairoGraphics.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-CairoGraphics.lo `test -f 'CairoGraphics.cpp' || echo '$(srcdir)/'`CairoGraphics.cpp

libnux_graphics_@NUX_API_VERSION@_la-Events.lo: Events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-Events.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-Events.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-Events.lo `test -f 'Events.cpp' || echo '$(srcdir)/'`Events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-Events.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-Events.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Events.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-Events.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-Events.lo `test -f 'Events.cpp' || echo '$(srcdir)/'`Events.cpp

libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.lo: FontRenderer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.lo `test -f 'FontRenderer.cpp' || echo '$(srcdir)/'`FontRenderer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FontRenderer.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-FontRenderer.lo `test -f 'FontRenderer.cpp' || echo '$(srcdir)/'`FontRenderer.cpp

libnux_graphics_@NUX_API_VERSION@_la-FontTexture.lo: FontTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-FontTexture.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-FontTexture.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-FontTexture.lo `test -f 'FontTexture.cpp' || echo '$(srcdir)/'`FontTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-FontTexture.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-FontTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FontTexture.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-FontTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-FontTexture.lo `test -f 'FontTexture.cpp' || echo '$(srcdir)/'`FontTexture.cpp

libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.lo: GdkGraphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.lo `test -f 'GdkGraphics.cpp' || echo '$(srcdir)/'`GdkGraphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GdkGraphics.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GdkGraphics.lo `test -f 'GdkGraphics.cpp' || echo '$(srcdir)/'`GdkGraphics.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.lo: GLDeviceFrameBufferObject.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.lo `test -f 'GLDeviceFrameBufferObject.cpp' || echo '$(srcdir)/'`GLDeviceFrameBufferObject.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLDeviceFrameBufferObject.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLDeviceFrameBufferObject.lo `test -f 'GLDeviceFrameBufferObject.cpp' || echo '$(srcdir)/'`GLDeviceFrameBufferObject.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.lo: GLDeviceObjects.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.lo `test -f 'GLDeviceObjects.cpp' || echo '$(srcdir)/'`GLDeviceObjects.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLDeviceObjects.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLDeviceObjects.lo `test -f 'GLDeviceObjects.cpp' || echo '$(srcdir)/'`GLDeviceObjects.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLError.lo: GLError.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLError.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLError.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLError.lo `test -f 'GLError.cpp' || echo '$(srcdir)/'`GLError.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLError.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLError.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLError.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLError.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLError.lo `test -f 'GLError.cpp' || echo '$(srcdir)/'`GLError.cpp

libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.lo: GlobalGraphicsInitializer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.lo `test -f 'GlobalGraphicsInitializer.cpp' || echo '$(srcdir)/'`GlobalGraphicsInitializer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GlobalGraphicsInitializer.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GlobalGraphicsInitializer.lo `test -f 'GlobalGraphicsInitializer.cpp' || echo '$(srcdir)/'`GlobalGraphicsInitializer.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.lo: GLPBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.lo `test -f 'GLPBuffer.cpp' || echo '$(srcdir)/'`GLPBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLPBuffer.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLPBuffer.lo `test -f 'GLPBuffer.cpp' || echo '$(srcdir)/'`GLPBuffer.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.lo: GLRenderStates.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.lo `test -f 'GLRenderStates.cpp' || echo '$(srcdir)/'`GLRenderStates.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLRenderStates.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLRenderStates.lo `test -f 'GLRenderStates.cpp' || echo '$(srcdir)/'`GLRenderStates.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLResource.lo: GLResource.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLResource.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLResource.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLResource.lo `test -f 'GLResource.cpp' || echo '$(srcdir)/'`GLResource.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLResource.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLResource.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLResource.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLResource.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLResource.lo `test -f 'GLResource.cpp' || echo '$(srcdir)/'`GLResource.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.lo: GLResourceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.lo `test -f 'GLResourceManager.cpp' || echo '$(srcdir)/'`GLResourceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLResourceManager.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLResourceManager.lo `test -f 'GLResourceManager.cpp' || echo '$(srcdir)/'`GLResourceManager.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLShader.lo: GLShader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLShader.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLShader.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLShader.lo `test -f 'GLShader.cpp' || echo '$(srcdir)/'`GLShader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLShader.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLShader.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLShader.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLShader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLShader.lo `test -f 'GLShader.cpp' || echo '$(srcdir)/'`GLShader.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.lo: GLShaderParameter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.lo `test -f 'GLShaderParameter.cpp' || echo '$(srcdir)/'`GLShaderParameter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLShaderParameter.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLShaderParameter.lo `test -f 'GLShaderParameter.cpp' || echo '$(srcdir)/'`GLShaderParameter.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.lo: GLSh_ColorPicker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.lo `test -f 'GLSh_ColorPicker.cpp' || echo '$(srcdir)/'`GLSh_ColorPicker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLSh_ColorPicker.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLSh_ColorPicker.lo `test -f 'GLSh_ColorPicker.cpp' || echo '$(srcdir)/'`GLSh_ColorPicker.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.lo: GLSh_DrawFunction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.lo `test -f 'GLSh_DrawFunction.cpp' || echo '$(srcdir)/'`GLSh_DrawFunction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLSh_DrawFunction.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLSh_DrawFunction.lo `test -f 'GLSh_DrawFunction.cpp' || echo '$(srcdir)/'`GLSh_DrawFunction.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.lo: GLSh_Fill.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.lo `test -f 'GLSh_Fill.cpp' || echo '$(srcdir)/'`GLSh_Fill.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLSh_Fill.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLSh_Fill.lo `test -f 'GLSh_Fill.cpp' || echo '$(srcdir)/'`GLSh_Fill.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.lo: GLTemplatePrimitiveBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.lo `test -f 'GLTemplatePrimitiveBuffer.cpp' || echo '$(srcdir)/'`GLTemplatePrimitiveBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLTemplatePrimitiveBuffer.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLTemplatePrimitiveBuffer.lo `test -f 'GLTemplatePrimitiveBuffer.cpp' || echo '$(srcdir)/'`GLTemplatePrimitiveBuffer.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.lo: GLTextureResourceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.lo `test -f 'GLTextureResourceManager.cpp' || echo '$(srcdir)/'`GLTextureResourceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLTextureResourceManager.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLTextureResourceManager.lo `test -f 'GLTextureResourceManager.cpp' || echo '$(srcdir)/'`GLTextureResourceManager.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.lo: GLTextureStates.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.lo `test -f 'GLTextureStates.cpp' || echo '$(srcdir)/'`GLTextureStates.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLTextureStates.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLTextureStates.lo `test -f 'GLTextureStates.cpp' || echo '$(srcdir)/'`GLTextureStates.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLTimer.lo: GLTimer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLTimer.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTimer.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLTimer.lo `test -f 'GLTimer.cpp' || echo '$(srcdir)/'`GLTimer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTimer.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLTimer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLTimer.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLTimer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLTimer.lo `test -f 'GLTimer.cpp' || echo '$(srcdir)/'`GLTimer.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.lo: GLVertexResourceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.lo `test -f 'GLVertexResourceManager.cpp' || echo '$(srcdir)/'`GLVertexResourceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLVertexResourceManager.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLVertexResourceManager.lo `test -f 'GLVertexResourceManager.cpp' || echo '$(srcdir)/'`GLVertexResourceManager.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.lo: GLWindowManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.lo `test -f 'GLWindowManager.cpp' || echo '$(srcdir)/'`GLWindowManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLWindowManager.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLWindowManager.lo `test -f 'GLWindowManager.cpp' || echo '$(srcdir)/'`GLWindowManager.cpp

libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.lo: GpuDevice.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.lo `test -f 'GpuDevice.cpp' || echo '$(srcdir)/'`GpuDevice.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GpuDevice.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GpuDevice.lo `test -f 'GpuDevice.cpp' || echo '$(srcdir)/'`GpuDevice.cpp

libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.lo: GpuDeviceShader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.lo `test -f 'GpuDeviceShader.cpp' || echo '$(srcdir)/'`GpuDeviceShader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GpuDeviceShader.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceShader.lo `test -f 'GpuDeviceShader.cpp' || echo '$(srcdir)/'`GpuDeviceShader.cpp

libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.lo: GpuDeviceTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.lo `test -f 'GpuDeviceTexture.cpp' || echo '$(srcdir)/'`GpuDeviceTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GpuDeviceTexture.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceTexture.lo `test -f 'GpuDeviceTexture.cpp' || echo '$(srcdir)/'`GpuDeviceTexture.cpp

libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.lo: GpuDeviceVertex.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.lo `test -f 'GpuDeviceVertex.cpp' || echo '$(srcdir)/'`GpuDeviceVertex.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GpuDeviceVertex.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GpuDeviceVertex.lo `test -f 'GpuDeviceVertex.cpp' || echo '$(srcdir)/'`GpuDeviceVertex.cpp

libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.lo: GraphicsEngine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.lo `test -f 'GraphicsEngine.cpp' || echo '$(srcdir)/'`GraphicsEngine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GraphicsEngine.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GraphicsEngine.lo `test -f 'GraphicsEngine.cpp' || echo '$(srcdir)/'`GraphicsEngine.cpp

libnux_graphics_@NUX_API_VERSION@_la-MeshData.lo: MeshData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-MeshData.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-MeshData.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-MeshData.lo `test -f 'MeshData.cpp' || echo '$(srcdir)/'`MeshData.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-MeshData.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-MeshData.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MeshData.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-MeshData.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-MeshData.lo `test -f 'MeshData.cpp' || echo '$(srcdir)/'`MeshData.cpp

libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.lo: MeshFileLoader-OBJ.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.lo `test -f 'MeshFileLoader-OBJ.cpp' || echo '$(srcdir)/'`MeshFileLoader-OBJ.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MeshFileLoader-OBJ.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-MeshFileLoader-OBJ.lo `test -f 'MeshFileLoader-OBJ.cpp' || echo '$(srcdir)/'`MeshFileLoader-OBJ.cpp

libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.lo: ImageSurface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.lo `test -f 'ImageSurface.cpp' || echo '$(srcdir)/'`ImageSurface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ImageSurface.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-ImageSurface.lo `test -f 'ImageSurface.cpp' || echo '$(srcdir)/'`ImageSurface.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.lo: IOpenGLAnimatedTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.lo `test -f 'IOpenGLAnimatedTexture.cpp' || echo '$(srcdir)/'`IOpenGLAnimatedTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLAnimatedTexture.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAnimatedTexture.lo `test -f 'IOpenGLAnimatedTexture.cpp' || echo '$(srcdir)/'`IOpenGLAnimatedTexture.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.lo: IOpenGLBaseTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.lo `test -f 'IOpenGLBaseTexture.cpp' || echo '$(srcdir)/'`IOpenGLBaseTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLBaseTexture.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLBaseTexture.lo `test -f 'IOpenGLBaseTexture.cpp' || echo '$(srcdir)/'`IOpenGLBaseTexture.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.lo: IOpenGLCubeTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.lo `test -f 'IOpenGLCubeTexture.cpp' || echo '$(srcdir)/'`IOpenGLCubeTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLCubeTexture.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLCubeTexture.lo `test -f 'IOpenGLCubeTexture.cpp' || echo '$(srcdir)/'`IOpenGLCubeTexture.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.lo: IOpenGLFrameBufferObject.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.lo `test -f 'IOpenGLFrameBufferObject.cpp' || echo '$(srcdir)/'`IOpenGLFrameBufferObject.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLFrameBufferObject.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLFrameBufferObject.lo `test -f 'IOpenGLFrameBufferObject.cpp' || echo '$(srcdir)/'`IOpenGLFrameBufferObject.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.lo: IOpenGLGLSLShader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.lo `test -f 'IOpenGLGLSLShader.cpp' || echo '$(srcdir)/'`IOpenGLGLSLShader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLGLSLShader.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLGLSLShader.lo `test -f 'IOpenGLGLSLShader.cpp' || echo '$(srcdir)/'`IOpenGLGLSLShader.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.lo: IOpenGLIndexBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.lo `test -f 'IOpenGLIndexBuffer.cpp' || echo '$(srcdir)/'`IOpenGLIndexBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLIndexBuffer.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLIndexBuffer.lo `test -f 'IOpenGLIndexBuffer.cpp' || echo '$(srcdir)/'`IOpenGLIndexBuffer.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.lo: IOpenGLPixelBufferOject.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.lo `test -f 'IOpenGLPixelBufferOject.cpp' || echo '$(srcdir)/'`IOpenGLPixelBufferOject.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLPixelBufferOject.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLPixelBufferOject.lo `test -f 'IOpenGLPixelBufferOject.cpp' || echo '$(srcdir)/'`IOpenGLPixelBufferOject.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.lo: IOpenGLQuery.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.lo `test -f 'IOpenGLQuery.cpp' || echo '$(srcdir)/'`IOpenGLQuery.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLQuery.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLQuery.lo `test -f 'IOpenGLQuery.cpp' || echo '$(srcdir)/'`IOpenGLQuery.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.lo: IOpenGLRectangleTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.lo `test -f 'IOpenGLRectangleTexture.cpp' || echo '$(srcdir)/'`IOpenGLRectangleTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLRectangleTexture.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLRectangleTexture.lo `test -f 'IOpenGLRectangleTexture.cpp' || echo '$(srcdir)/'`IOpenGLRectangleTexture.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.lo: IOpenGLSurface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.lo `test -f 'IOpenGLSurface.cpp' || echo '$(srcdir)/'`IOpenGLSurface.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLSurface.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLSurface.lo `test -f 'IOpenGLSurface.cpp' || echo '$(srcdir)/'`IOpenGLSurface.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.lo: IOpenGLTexture2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.lo `test -f 'IOpenGLTexture2D.cpp' || echo '$(srcdir)/'`IOpenGLTexture2D.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLTexture2D.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLTexture2D.lo `test -f 'IOpenGLTexture2D.cpp' || echo '$(srcdir)/'`IOpenGLTexture2D.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.lo: IOpenGLVertexBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.lo `test -f 'IOpenGLVertexBuffer.cpp' || echo '$(srcdir)/'`IOpenGLVertexBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLVertexBuffer.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexBuffer.lo `test -f 'IOpenGLVertexBuffer.cpp' || echo '$(srcdir)/'`IOpenGLVertexBuffer.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.lo: IOpenGLVertexDeclaration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.lo `test -f 'IOpenGLVertexDeclaration.cpp' || echo '$(srcdir)/'`IOpenGLVertexDeclaration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLVertexDeclaration.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVertexDeclaration.lo `test -f 'IOpenGLVertexDeclaration.cpp' || echo '$(srcdir)/'`IOpenGLVertexDeclaration.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.lo: IOpenGLVolume.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.lo `test -f 'IOpenGLVolume.cpp' || echo '$(srcdir)/'`IOpenGLVolume.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLVolume.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolume.lo `test -f 'IOpenGLVolume.cpp' || echo '$(srcdir)/'`IOpenGLVolume.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.lo: IOpenGLVolumeTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.lo `test -f 'IOpenGLVolumeTexture.cpp' || echo '$(srcdir)/'`IOpenGLVolumeTexture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLVolumeTexture.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLVolumeTexture.lo `test -f 'IOpenGLVolumeTexture.cpp' || echo '$(srcdir)/'`IOpenGLVolumeTexture.cpp

libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.lo: NuxGraphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.lo `test -f 'NuxGraphics.cpp' || echo '$(srcdir)/'`NuxGraphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NuxGraphics.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-NuxGraphics.lo `test -f 'NuxGraphics.cpp' || echo '$(srcdir)/'`NuxGraphics.cpp

libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.lo: NuxGraphicsObject.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.lo `test -f 'NuxGraphicsObject.cpp' || echo '$(srcdir)/'`NuxGraphicsObject.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NuxGraphicsObject.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsObject.lo `test -f 'NuxGraphicsObject.cpp' || echo '$(srcdir)/'`NuxGraphicsObject.cpp

libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.lo: NuxGraphicsResources.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.lo `test -f 'NuxGraphicsResources.cpp' || echo '$(srcdir)/'`NuxGraphicsResources.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NuxGraphicsResources.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-NuxGraphicsResources.lo `test -f 'NuxGraphicsResources.cpp' || echo '$(srcdir)/'`NuxGraphicsResources.cpp

libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.lo: RenderingPipe.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.lo `test -f 'RenderingPipe.cpp' || echo '$(srcdir)/'`RenderingPipe.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RenderingPipe.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-RenderingPipe.lo `test -f 'RenderingPipe.cpp' || echo '$(srcdir)/'`RenderingPipe.cpp

libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.lo: RenderingPipeGLSL.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.lo `test -f 'RenderingPipeGLSL.cpp' || echo '$(srcdir)/'`RenderingPipeGLSL.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RenderingPipeGLSL.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeGLSL.lo `test -f 'RenderingPipeGLSL.cpp' || echo '$(srcdir)/'`RenderingPipeGLSL.cpp

libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.lo: RenderingPipeTextureBlend.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.lo `test -f 'RenderingPipeTextureBlend.cpp' || echo '$(srcdir)/'`RenderingPipeTextureBlend.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RenderingPipeTextureBlend.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeTextureBlend.lo `test -f 'RenderingPipeTextureBlend.cpp' || echo '$(srcdir)/'`RenderingPipeTextureBlend.cpp

libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.lo: GLRenderingAPI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.lo `test -f 'GLRenderingAPI.cpp' || echo '$(srcdir)/'`GLRenderingAPI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GLRenderingAPI.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GLRenderingAPI.lo `test -f 'GLRenderingAPI.cpp' || echo '$(srcdir)/'`GLRenderingAPI.cpp

libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.lo: RunTimeStats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.lo `test -f 'RunTimeStats.cpp' || echo '$(srcdir)/'`RunTimeStats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RunTimeStats.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-RunTimeStats.lo `test -f 'RunTimeStats.cpp' || echo '$(srcdir)/'`RunTimeStats.cpp

libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.lo: GraphicsDisplayX11.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.lo `test -f 'GraphicsDisplayX11.cpp' || echo '$(srcdir)/'`GraphicsDisplayX11.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GraphicsDisplayX11.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GraphicsDisplayX11.lo `test -f 'GraphicsDisplayX11.cpp' || echo '$(srcdir)/'`GraphicsDisplayX11.cpp

libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.lo: XInputWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.lo `test -f 'XInputWindow.cpp' || echo '$(srcdir)/'`XInputWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='XInputWindow.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-XInputWindow.lo `test -f 'XInputWindow.cpp' || echo '$(srcdir)/'`XInputWindow.cpp

libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.lo: IOpenGLAsmShader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.lo `test -f 'IOpenGLAsmShader.cpp' || echo '$(srcdir)/'`IOpenGLAsmShader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IOpenGLAsmShader.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-IOpenGLAsmShader.lo `test -f 'IOpenGLAsmShader.cpp' || echo '$(srcdir)/'`IOpenGLAsmShader.cpp

libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.lo: RenderingPipeAsm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.lo `test -f 'RenderingPipeAsm.cpp' || echo '$(srcdir)/'`RenderingPipeAsm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RenderingPipeAsm.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-RenderingPipeAsm.lo `test -f 'RenderingPipeAsm.cpp' || echo '$(srcdir)/'`RenderingPipeAsm.cpp

libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.lo: GestureEvent.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.lo -MD -MP -MF $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.Tpo -c -o libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.lo `test -f 'GestureEvent.cpp' || echo '$(srcdir)/'`GestureEvent.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.Tpo $(DEPDIR)/libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GestureEvent.cpp' object='libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnux_graphics_@NUX_API_VERSION@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libnux_graphics_@NUX_API_VERSION@_la-GestureEvent.lo `test -f 'GestureEvent.cpp' || echo '$(srcdir)/'`GestureEvent.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-nux_graphicsHEADERS: $(nux_graphics_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nux_graphics_HEADERS)'; test -n "$(nux_graphicsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(nux_graphicsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(nux_graphicsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(nux_graphicsdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(nux_graphicsdir)" || exit $$?; \
	done

uninstall-nux_graphicsHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nux_graphics_HEADERS)'; test -n "$(nux_graphicsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(nux_graphicsdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(nux_graphicsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nux_graphicsHEADERS install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-nux_graphicsHEADERS \
	uninstall-pkgconfigDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nux_graphicsHEADERS install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-nux_graphicsHEADERS uninstall-pkgconfigDATA

.PRECIOUS: Makefile


nux-graphics-@NUX_API_VERSION@.pc: nux-graphics.pc
	$(AM_V_GEN) cp -f nux-graphics.pc nux-graphics-@NUX_API_VERSION@.pc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
